
function callbackTwo(a: number, b: number, callback: (a: number, b: number) => void) {
  // 비동기적으로 처리하기 위해서 setTimeout을 썻다 : 순서를 어기는 방식
  // 순서를 어겨서라도 행동을 하기 위해서 시기적으로 타이밍을 맞추기 위해서 썻다
  // libuv(비동기처리) 라는 c++ 라이브러리를 자바스크립트가 가져왔다
  // c++에서 가져올 만큼 아주 절실한 도구였다
  // 엔진 내부에서는 setTimeout을 만나면 독자적인 알아서 처리하게 한다
  // setTimeout, setInterval을 만나면 event loop로 인계하게끔 조정되어 있다
  // 왜 순서를 어기려 할까? 제한된 상황에서 빠른 처리가 필요할때
  // 어디서 발견될까?? fetch
  setTimeout(() => {
    callback(a, b);
  }, 1000);
}


callbackTwo(10, 20, (a, b) => { // 8번줄을 읽고 값이 없는 (a,b)를 읽으려 한다
  let result = a + b;
  console.log("비동기 덧셈 결과: ", result);
});
