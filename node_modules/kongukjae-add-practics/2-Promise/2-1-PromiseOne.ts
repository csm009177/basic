
/**
 * 두 개의 숫자를 더하는 Promise를 생성합니다.
 * @param a 첫 번째 숫자
 * @param b 두 번째 숫자
 * @returns 덧셈 결과를 담은 Promise 객체
 */
function promiseOne(a: number, b: number): Promise<number> { 
  // Promise<number> 제네릭이라는 문법 : Promise라는 것을 number로 받겠다
  // new를 왜 쓸까?? 새로 붕어빵을 만들겠다 
  // 콘솔찍으면 new promise는 객체가 나온다
  // 콜백 패턴이 복잡하기 때문에 promise를 js에서 만들어줬다
  // js엔진과 개발자 사이의 약속 : 동작원리의 주도권이 개발자로 바뀐다
  // 개발자가 내 맘대로 하겠다고 하는 선언하는 것
  return new Promise((resolve) => { 
  // 인스턴스가 생성될때 pending 된다 ready 상태
    resolve(a + b); // fullfield가 된다
    // reject는 거절되었다 // 상태 : 대기 / 이행 / 거절
  });
}

promiseOne(5, 3).then(result => { // 1번 // 2번 5,3을 물어서 then에 전달 
  console.log("덧셈 결과: ", result);
});

